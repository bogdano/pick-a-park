package components

import (
    "go-htmx/api"
	"fmt"
)

templ Campground(campground api.Campground, parkName string, Id string) {
	@Page(campground.Name, CampgroundInfo(campground, parkName, Id))
}

templ CampgroundInfo(campground api.Campground, parkName string, Id string) {
    <div class="flex flex-col items-center justify-center pt-4 mb-4 gap-4">
		<div class="flex flex-col md:flex-row flex-wrap gap-5 mx-3 justify-center">
			<div class="flex flex-row justify-center gap-3 md:hidden">
				<button onclick="history.back()" class="backBtn my-auto">
					<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="dark:bg-lime-950 dark:fill-white dark:hover:bg-lime-900 fill-lime-700 shadow-md h-12 w-12 border border-lime-700 rounded-xl align-middle p-1 hover:bg-lime-100">
						<title>Back</title>
						<g id="SVGRepo_bgCarrier" stroke-width="0"/>
						<g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"/>
						<g id="SVGRepo_iconCarrier"> <path d="M4 10L3.29289 10.7071L2.58579 10L3.29289 9.29289L4 10ZM21 18C21 18.5523 20.5523 19 20 19C19.4477 19 19 18.5523 19 18L21 18ZM8.29289 15.7071L3.29289 10.7071L4.70711 9.29289L9.70711 14.2929L8.29289 15.7071ZM3.29289 9.29289L8.29289 4.29289L9.70711 5.70711L4.70711 10.7071L3.29289 9.29289ZM4 9L14 9L14 11L4 11L4 9ZM21 16L21 18L19 18L19 16L21 16ZM14 9C17.866 9 21 12.134 21 16L19 16C19 13.2386 16.7614 11 14 11L14 9Z" /> </g>
					</svg>
				</button>
				<button onclick="share();" class="my-auto ">
					<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="dark:text-white dark:hover:bg-lime-800 dark:bg-lime-950 dark:hover:bg-lime-900 text-lime-700 fill-none shadow-md h-12 w-12 border border-lime-700 rounded-xl align-middle p-1 hover:bg-lime-100" stroke="currentColor">
						<title>Share</title>
						<g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M9 12C9 13.3807 7.88071 14.5 6.5 14.5C5.11929 14.5 4 13.3807 4 12C4 10.6193 5.11929 9.5 6.5 9.5C7.88071 9.5 9 10.6193 9 12Z" stroke-width="1.5"></path> <path d="M14 6.5L9 10" stroke-width="1.5" stroke-linecap="round"></path> <path d="M14 17.5L9 14" stroke-width="1.5" stroke-linecap="round"></path> <path d="M19 18.5C19 19.8807 17.8807 21 16.5 21C15.1193 21 14 19.8807 14 18.5C14 17.1193 15.1193 16 16.5 16C17.8807 16 19 17.1193 19 18.5Z" stroke-width="1.5"></path> <path d="M19 5.5C19 6.88071 17.8807 8 16.5 8C15.1193 8 14 6.88071 14 5.5C14 4.11929 15.1193 3 16.5 3C17.8807 3 19 4.11929 19 5.5Z" stroke-width="1.5"></path> </g>
					</svg>
				</button>
			</div>
			<button onclick="history.back()" class="backBtn my-auto hidden md:block mobile">
				<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="dark:bg-lime-950 dark:fill-white dark:hover:bg-lime-900 fill-lime-700 shadow-md h-12 w-12 border border-lime-700 rounded-xl align-middle p-1 hover:bg-lime-100">
					<title>Back</title>
					<g id="SVGRepo_bgCarrier" stroke-width="0"/>
					<g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"/>
					<g id="SVGRepo_iconCarrier"> <path d="M4 10L3.29289 10.7071L2.58579 10L3.29289 9.29289L4 10ZM21 18C21 18.5523 20.5523 19 20 19C19.4477 19 19 18.5523 19 18L21 18ZM8.29289 15.7071L3.29289 10.7071L4.70711 9.29289L9.70711 14.2929L8.29289 15.7071ZM3.29289 9.29289L8.29289 4.29289L9.70711 5.70711L4.70711 10.7071L3.29289 9.29289ZM4 9L14 9L14 11L4 11L4 9ZM21 16L21 18L19 18L19 16L21 16ZM14 9C17.866 9 21 12.134 21 16L19 16C19 13.2386 16.7614 11 14 11L14 9Z" /> </g>
				</svg>
			</button>
			<div class="flex flex-col justify-center flex-wrap">
				<h1 id="main-title" class="dark:text-amber-100 text-4xl md:text-5xl text-center my-auto text-stone-700 font-black">{ campground.Name }</h1>
				<span class="text-2xl text-center mb-0.5 text-stone-500 font-bold">{ parkName }</span>
			</div>
			<button onclick="share();" class="my-auto hidden md:block">
				<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="dark:bg-lime-950 dark:hover:bg-lime-900 dark:text-white text-lime-700 fill-none shadow-md h-12 w-12 border border-lime-700 rounded-xl align-middle p-1 hover:bg-lime-100" stroke="currentColor">
					<title>Share</title>
					<g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M9 12C9 13.3807 7.88071 14.5 6.5 14.5C5.11929 14.5 4 13.3807 4 12C4 10.6193 5.11929 9.5 6.5 9.5C7.88071 9.5 9 10.6193 9 12Z" stroke-width="1.5"></path> <path d="M14 6.5L9 10" stroke-width="1.5" stroke-linecap="round"></path> <path d="M14 17.5L9 14" stroke-width="1.5" stroke-linecap="round"></path> <path d="M19 18.5C19 19.8807 17.8807 21 16.5 21C15.1193 21 14 19.8807 14 18.5C14 17.1193 15.1193 16 16.5 16C17.8807 16 19 17.1193 19 18.5Z" stroke-width="1.5"></path> <path d="M19 5.5C19 6.88071 17.8807 8 16.5 8C15.1193 8 14 6.88071 14 5.5C14 4.11929 15.1193 3 16.5 3C17.8807 3 19 4.11929 19 5.5Z" stroke-width="1.5"></path> </g>
				</svg>
			</button>
		</div>
	</div>

	if campground.MapImage != "" {
		<div class="group max-w-3xl mx-5 mb-4 md:mx-auto h-96 rounded-2xl bg-stone-200 dark:bg-stone-500 relative overflow-hidden">
			<img src={ string(templ.SafeURL(fmt.Sprintf("/api/files/cnpa06hb04mppdu/%s/%s", Id, campground.MapImage)))}
			     alt="campground map"
				 class="w-full h-full rounded-2xl object-cover object-center group-hover:border-2 border-lime-600"
				 loading="lazy" />
    		<a href={ templ.SafeURL(fmt.Sprintf("https://www.google.com/maps/search/?api=1&query=%s,%s", campground.Latitude, campground.Longitude))}
                target="blank"
                class="absolute inset-0 cursor-pointer flex justify-end items-end">
				<img src="/gmaps.svg" alt="Camp Location" class="transition-opacity opacity-0 group-hover:opacity-100 m-5 w-16 h-16" />
			</a>
		</div>
	}
	if campground.DirectionsOverview != "" {
		<p class="dark:text-amber-50 max-w-2xl mx-5 md:mx-auto mb-8 text-center text-stone-600 font-bold break-words">{ campground.DirectionsOverview }</p>
	}

	<p class="dark:text-amber-100 max-w-3xl mx-5 md:mx-auto mb-2 text-xl text-center text-stone-700 font-bold">DESCRIPTION</p>
	<p class="dark:text-amber-50 max-w-3xl mx-5 md:mx-auto mb-8 text-lg text-center text-stone-700 break-words">{ campground.Description }</p>

	<div class="flex space-x-4 justify-center mb-8">
		<div class="dark:bg-amber-700 dark:bg-opacity-80 dark:text-amber-100 bg-amber-100 text-amber-800 w-40 h-40 rounded-2xl flex flex-col justify-center items-center p-4">
			<span class="font-bold text-center text-sm">RESERVABLE CAMP SPOTS:</span>
			<div class="flex items-center mt-2">
				<img src="/reservable.svg" alt="Reservable Icon" class="w-12 h-12 mr-2">
				<span class=" text-2xl font-bold ">{ campground.Reservable }</span>
			</div>
		</div>
		<div class="dark:bg-lime-900 dark:text-lime-100 bg-lime-100 text-lime-800 w-40 h-40 rounded-2xl flex flex-col justify-center items-center p-4">
			<span class="font-bold text-center text-sm">FIRST COME FIRST SERVED:</span>
			<div class="flex items-center mt-2">
				<img src="/firstcomefirstserve.svg" alt="First-Come Icon" class="w-12 h-12 mr-2">
				<span class="text-2xl font-bold">{ campground.FirstComeFirstServe }</span>
			</div>
		</div>
	</div>

	if campground.WeatherOverview != "" {
		<p class="dark:text-amber-100 max-w-3xl mx-5 md:mx-auto mb-2 text-xl text-center text-stone-700 font-bold">WEATHER INFO</p>
		<p class="dark:text-amber-50 max-w-3xl mx-5 md:mx-auto mb-8 text-lg text-center text-stone-700 break-words">{ campground.WeatherOverview }</p>
	}

	if len(campground.Images) > 0 {
		<div class="blaze-slider mb-8 w-full">
			<div class="blaze-container max-w-3xl mx-auto">
				<div class="blaze-track-container md:rounded-2xl bg-stone-200 dark:bg-stone-500 max-w-fit">
					<div class="blaze-track">
						for i, image := range campground.Images {
							<img src={ string(templ.SafeURL(fmt.Sprintf("/api/files/cnpa06hb04mppdu/%s/%s", Id, image)))}
								alt="Park photo"
								class="park-photo w-auto object-cover block h-96"
								if i > 0 {
									loading="lazy"
								}
							/>
						}
					</div>
				</div>
				<!-- navigation buttons -->
				if len(campground.Images) > 1 {
					<div class="flex justify-center items-center mt-4 gap-1">
						<button class="blaze-prev" aria-label="Go to previous slide">
							<svg class="dark:text-lime-400 text-lime-800 w-7 h-7" stroke="currentColor" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M15 7L10 12L15 17" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path> </g></svg>
						</button>
						<span id="indexEl" class="dark:text-lime-400 text-lg text-lime-800">1</span><span class="dark:text-amber-50 text-lg">/ { fmt.Sprintf("%v", len(campground.Images)) }</span>
						<button class="blaze-next" aria-label="Go to next slide">
							<svg class="dark:text-lime-400 text-lime-800 w-7 h-7" stroke="currentColor" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M10 7L15 12L10 17" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path> </g></svg>
						</button>
					</div>
				}
			</div>
		</div>
	}

	if campground.ReservationInfo != "" {
		<p class="dark:text-amber-100 max-w-3xl mx-5 md:mx-auto mb-2 text-xl text-center text-stone-700 font-bold">RESERVATIONS INFO</p>
		<p class="dark:text-amber-50 max-w-3xl mx-5 md:mx-auto mb-8 text-lg text-center text-stone-700 break-words">{ campground.ReservationInfo }</p>
		if campground.ReservationURL != "" {
			<a  href={ templ.SafeURL(fmt.Sprint(campground.ReservationURL))} target="_blank"
				class="do-not-prerender flex flex-row items-center justify-center w-64 mx-auto mb-12 py-2 px-4 text-lg text-center font-bold text-white bg-lime-700 rounded-2xl hover:bg-lime-800 cursor-pointer">
				<span class="mr-1">Reserve</span>
				<svg class="h-5 w-5 text-white" stroke="currentColor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none">
					<g id="Interface / External_Link">
					<path id="Vector" d="M10.0002 5H8.2002C7.08009 5 6.51962 5 6.0918 5.21799C5.71547 5.40973 5.40973 5.71547 5.21799 6.0918C5 6.51962 5 7.08009 5 8.2002V15.8002C5 16.9203 5 17.4801 5.21799 17.9079C5.40973 18.2842 5.71547 18.5905 6.0918 18.7822C6.5192 19 7.07899 19 8.19691 19H15.8031C16.921 19 17.48 19 17.9074 18.7822C18.2837 18.5905 18.5905 18.2839 18.7822 17.9076C19 17.4802 19 16.921 19 15.8031V14M20 9V4M20 4H15M20 4L13 11" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
					</g>
				</svg>
			</a>
		} else {
			<div class="mb-12"></div>
		}
	}


    <script>
		(function() {
			function loadScript(src, callback) {
				const script = document.createElement('script');
				script.src = src;
				script.onload = callback;
				script.onerror = function() {
					console.error('Failed to load script:', src);
				};
				document.head.appendChild(script);
			}

			function initSlider() {
				const el = document.querySelector('.blaze-slider');
				if (!el) {
					console.error('BlazeSlider element not found');
					return;
				}
				const config = {
					all: {
						loop: true,
						slideGap: '5px',
					},
				};
				const slider = new BlazeSlider(el, config);
				const indexEl = document.getElementById('indexEl');
				if (indexEl) {
					slider.onSlide((pageIndex, firstVisibleSlideIndex, lastVisibleSlideIndex) => {
						indexEl.textContent = pageIndex + 1;
					});
				}
				document.addEventListener('keydown', function(event) {
					if (event.key === 'ArrowLeft') {
						slider.prev()
					} else if (event.key === 'ArrowRight') {
						slider.next()
					}
				});
			}
			if (typeof BlazeSlider === 'undefined') {
				loadScript('/blaze-slider.min.js', initSlider);
			} else {
				initSlider();
			}
		})();
    </script>
}
